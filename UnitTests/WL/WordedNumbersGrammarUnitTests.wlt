(*
    Worded numbers grammar Mathematica unit tests
    Copyright (C) 2018  Anton Antonov

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

   	Written by Anton Antonov,
	  ʇǝu˙oǝʇsod@ǝqnɔuouoʇuɐ,
	  Windermere, Florida, USA.
*)

(*
    This unit test files tests the that for certain randomly generated integers
    their word form generated by Mathematica is parsed correctly by the grammar in the file:

    https://github.com/antononcube/ConversationalAgents/blob/master/EBNF/WordedNumbersGrammar.m

    Note that two word forms are generated for each integer: one with hyphens and commas and one without.

*)


BeginTestSection["WordedNumbersGrammarUnitTests.wlt"];

VerificationTest[(* 1 *)
  CompoundExpression[
    Import["~/ConversationalAgents/EBNF/English/Mathematica/WordedNumbersGrammar.m"],
    StringQ[WordedNumbersGrammar[]] && StringLength[WordedNumbersGrammar[]] > 3000
  ]
  ,
  True
  ,
  TestID->"LoadPackage"
];


VerificationTest[(* 2 *)
  TWNTokenizer = (ParseToTokens[#, {",", "\[Hyphen]"}, {" ", "\t", "\n"}] &);
  TestFunc = ParseShortest[pCLCONCOMMAND][TClConTokenizer[#]] &;
  ,
  Null
  ,
  TestID->"DefineTestFunc"
];

VerificationTest[
  rInts =
      Sort@
          Join[
            RandomInteger[{0, 100}, 15],
            RandomInteger[{100, 999}, 15],
            RandomInteger[{1000, 9999}, 15],
            RandomInteger[{10000, 15000000}, 15],
            {5020, 16001, 123023, 1200002}
          ];
  queries1 = IntegerName[#, "Words"]& /@ rInts;
  queries2 =
      StringReplace[IntegerName[#, "Words"], {"\[Hyphen]" -> " ", "," -> ""}] & /@ rInts;
  rInts = Join[rInts, rInts];
  queries = Join[queries1, queries2];
  {Apply[And, IntegerQ /@ rInts], Apply[And, StringQ /@ queries], Length[rInts] == Length[queries]}
  ,
  {True, True, True}
  ,
  TestID -> "random-integers-and-corner-cases"
];


VerificationTest[
  pres = ParseShortest[pWORDEDNUMBER][TWNTokenizer[#]] & /@ queries;
  pres2 = Cases[#, WordedNumber[x_] :> x, Infinity] & /@ pres;
  Flatten[pres2] == rInts
  ,
  True,
  TestID -> "Same-integers"
];

EndTestSection[]
